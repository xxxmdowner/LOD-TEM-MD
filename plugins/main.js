const {cmd ,command} = require('../command');
 
const config = require('../config.cjs');
const os = require("os")
const {runtime , fetchJson} = require('../lib/functions');
//alive
cmd({
    pattern: "alive",
    desc: "Check bot online or no.",
    react: "üõ†Ô∏è",
    category: "main",
    filename: __filename
},
async(conn, mek, m,{from, mnu, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{

const voice = {
    alive: 'https://raw.githubusercontent.com/RASH-DATA/ANJU-DATA/refs/heads/main/Auto_voice/AUD-20241111-WA0028.aac'
}

let img = await fetchJson(`https://raw.githubusercontent.com/RASH-DATA/ANJU-DATA/refs/heads/main/LOGOS/logo.json`)
let ALIVE_IMG = img.alive;
let aliveMsg = `
üßö‚Äç‚ôÇÔ∏è‚Éüü©µ ùêêùêîùêÑùêÑùêç ùêÄùêçùêâùêî ùêÄùêãùêàùêïùêÑ ùêíùêìùêÄùêìùêîùêí üßö‚Äç‚ôÇÔ∏è‚Éüü©µ

‚úò‚óç ùóú'ùó∫ ùóîùóπùó∂ùòÉùó≤, ùóßùóµùóÆùóªùó∏ùòÄ ùó≥ùóºùóø ùóîùòÄùó∏ùó∂ùóªùó¥!

‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚ùÆ üìÖ ùëªùë∂ùë´ùëéùíö üìÖ‚ùØ‚îÅ‚îÅ‚îÅ‚îÅ
‚îÉ
‚îÉ üìÖ Date Today: ${new Date().toLocaleDateString('en-GB', { timeZone: 'Asia/Colombo' })}
‚îÉ ‚åö Time Now: ${new Date().toLocaleTimeString('en-GB', { timeZone: 'Asia/Colombo' })}
‚îÉ
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚ùÆüìù ùó¶ùòÅùóÆùòÅùòÇùòÄ ùóóùó≤ùòÅùóÆùó∂ùóπùòÄ üìù‚ùØ‚îÅ‚îÅ‚îÅ
‚îÉüó£Ô∏è ùöÑùöúùöéùöõ : ${pushname}
‚îÉü§ñ ùô±ùöòùöù : ¬© ùöÄùöÑùô¥ùô¥ùôΩ ùô∞ùôΩùôπùöÑ ùóë·¥æ·¥ø·¥º V${require('../package.json').version}
‚îÉüìú ùôøùöõùöéùöèùöíùö° : ${config.PREFIX}
‚îÉüìö ùöÖùöéùöõùöúùöíùöòùöó : ${require('../package.json').version}
‚îÉüìù ùôøùöïùöäùöùùöèùöòùöõùöñ : ${os.platform()}
‚îÉüìü ùô∑ùöòùöúùöù : ${os.hostname()}
‚îÉ‚öôÔ∏è ùôºùöòùöçùöé : ${config.MODE}
‚îÉüíª ùöÑùöôùöùùöíùöñùöé : ${runtime(process.uptime())}
‚îÉ‚ú®ùôºùöéùöñ : ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${Math.round(require('os').totalmem / 1024 / 1024)}MB
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

üí¨ ·¥á…¥·¥è è ·¥õ ú·¥á ùóØùóºùòÅ ·¥èùó≥ ùööùöûùöéùöéùöó ùóÆùóªùó∑ùòÇ! ‚ú®

> Q·¥ú·¥á·¥á…¥ ·¥Ä…¥·¥ä·¥ú ·¥ç·¥Ö ·¥Ñ·¥è·¥ç·¥ò ü·¥áùòÅùò¶ùó± ùóØ è ·¥ç Ä  Ä·¥ÄÍú± ú·¥ç…™·¥ã·¥Ä .....
> …¢…™·¥õ  ú·¥ú ô  Ä·¥á·¥ò·¥è : github.com/Mrrashmika/QUEEN_ANJU_MD
`;

await conn.sendMessage(from, { audio: { url: voice.alive }, mimetype: 'audio/mp4', ptt: true }, { quoted: mek })

await conn.sendMessage(from, {
  image: { url: img.alive}, // Ensure `img.allmenu` is a valid image URL or base64 encoded image
  caption: aliveMsg,
  contextInfo: {
      mentionedJid: ['94717775628@s.whatsapp.net'], // specify mentioned JID(s) if any
      groupMentions: [],
      forwardingScore: 999,
      isForwarded: true,
      forwardedNewsletterMessageInfo: {
          newsletterJid: '120363299978149557@newsletter',
          newsletterName: "¬© ùöÄùöÑùô¥ùô¥ùôΩ ùô∞ùôΩùôπùöÑ ùóë·¥æ·¥ø·¥º üíö",
          serverMessageId: 999
      },
      externalAdReply: {
          title: '¬© ùöÄùöÑùô¥ùô¥ùôΩ ùô∞ùôΩùôπùöÑ ùóë·¥æ·¥ø·¥º üíö',
          body: ' ¬©ùêåùêë ùêëùêÄùêíùêáùêåùêàùêäùêÄ ùêéùêÖùêÇ üíö',
          mediaType: 1,
          sourceUrl: "https://github.com/Mrrashmika",
          thumbnailUrl: 'https://raw.githubusercontent.com/RASH-DATA/ANJU-DATA/refs/heads/main/LOGOS/thisjpg.jpg', // This should match the image URL provided above
          renderLargerThumbnail: false,
          showAdAttribution: true
      }
  }
});
}catch(e){
console.log(e)
reply(`${e}`)
}
});

//system
cmd({
    pattern: "system",
    alias: ["status","botinfo"],
    react: "üè∑Ô∏è",
    desc: "To Check uptime , ram and more.",
    category: "main",
    filename: __filename
},
async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{

let status = `
üè∑Ô∏è SYSTEM STATUS

üîÑ UPTIME: ${runtime(process.uptime())}
üîã RAM USAGE: ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${Math.round(require('os').totalmem / 1024 / 1024)}MB
üíª HOST NAME: ${os.hostname()}
üëë BOT OWNER: Janith Rashmika

> * ¬© ùöÄùöÑùô¥ùô¥ùôΩ ùô∞ùôΩùôπùöÑ ùóë·¥æ·¥ø·¥º üíö  
> *üíª GitHub:* github.com/Mrrashmika/QUEEN_ANJU_MD 
`
await conn.sendMessage(from, {
  image: { url: 'https://raw.githubusercontent.com/RASH-DATA/ANJU-DATA/refs/heads/main/LOGOS/thisjpg.jpg'}, // Ensure `img.allmenu` is a valid image URL or base64 encoded image
  caption: status,
  contextInfo: {
      mentionedJid: ['94717775628@s.whatsapp.net'], // specify mentioned JID(s) if any
      groupMentions: [],
      forwardingScore: 999,
      isForwarded: true,
      forwardedNewsletterMessageInfo: {
          newsletterJid: '120363299978149557@newsletter',
          newsletterName: "¬© ùöÄùöÑùô¥ùô¥ùôΩ ùô∞ùôΩùôπùöÑ ùóë·¥æ·¥ø·¥º üíö",
          serverMessageId: 999
      },
      externalAdReply: {
          title: '¬© ùöÄùöÑùô¥ùô¥ùôΩ ùô∞ùôΩùôπùöÑ ùóë·¥æ·¥ø·¥º üíö',
          body: ' ¬©ùêåùêë ùêëùêÄùêíùêáùêåùêàùêäùêÄ ùêéùêÖùêÇ üíö',
          mediaType: 1,
          sourceUrl: "https://github.com/Mrrashmika",
          thumbnailUrl: 'https://raw.githubusercontent.com/RASH-DATA/ANJU-DATA/refs/heads/main/LOGOS/thisjpg.jpg', // This should match the image URL provided above
          renderLargerThumbnail: false,
          showAdAttribution: true
      }
  }
}); 
}catch(e){
console.log(e)
reply(`${e}`)

}
})

//runtime
cmd({
    pattern: "runtime",
    alias: ["uptime"],
    react: "üòá",
    desc: "To Check uptime",
    category: "main",
    filename: __filename
},
async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{

let status = `
üòáùöÅùöÑùôΩùöÉùô∏ùôºùô¥üòá:  ${runtime(process.uptime())}

> * ¬© ùöÄùöÑùô¥ùô¥ùôΩ ùô∞ùôΩùôπùöÑ ùóë·¥æ·¥ø·¥º üíö  
> *üíª GitHub:* github.com/Mrrashmika/QUEEN_ANJU_MD 
`


await conn.sendMessage(from, { text: status ,
    contextInfo: {
      mentionedJid: [ '' ],
      groupMentions: [],
      forwardingScore: 999,
      isForwarded: true,
      forwardedNewsletterMessageInfo: {
        newsletterJid: '120363299978149557@newsletter',
        newsletterName: "¬© ùöÄùöÑùô¥ùô¥ùôΩ ùô∞ùôΩùôπùöÑ ùóë·¥æ·¥ø·¥º üíö",
        serverMessageId: 999
      },
  externalAdReply: { 
  title: '¬© ùöÄùöÑùô¥ùô¥ùôΩ ùô∞ùôΩùôπùöÑ ùóë·¥æ·¥ø·¥º üíö',
  body: ' ¬©ùêåùêë ùêëùêÄùêíùêáùêåùêàùêäùêÄ ùêéùêÖùêÇ üíö',
  mediaType: 1,
  sourceUrl: "https://github.com/Mrrashmika" ,
  thumbnailUrl: 'https://raw.githubusercontent.com/RASH-DATA/ANJU-DATA/refs/heads/main/LOGOS/thisjpg.jpg' ,
  renderLargerThumbnail: true,
  showAdAttribution: true
  }
  }}, { quoted: mek})
}catch(e){
console.log(e)
reply(`${e}`)

}
})

//ping
cmd({
  pattern: "ping",
  desc: "Check bot's response time.",
  category: "main",
  react: "‚ù§Ô∏è‚Äçü©π",
  filename: __filename
},
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
  try {
    const mnu = {
        key: {
            participants: "0@s.whatsapp.net",
            remoteJid: "status@broadcast",
            fromMe: true,
            id: "¬©ùêåùêë ùêëùêÄùêíùêáùêåùêàùêäùêÄ ùêéùêÖùêÇ üíö"
        },
        message: {
            contactMessage: {
                vcard: `BEGIN:VCARD\nVERSION:3.0\nN:Sy;Bot;;;\nFN:Sy\nitem1.TEL;waid=${m.sender.split('@')[0]}:${m.sender.split('@')[0]}\nitem1.X-ABLabel:Ponsel\nEND:VCARD`
            }
        },
        participant: "0@s.whatsapp.net"
    };
      const startTime = Date.now()
      const message = await conn.sendMessage(from, { text: 'ùó£ùó∂ùóªùó¥ùó∂ùóªùó¥...' })
      const endTime = Date.now()
      const ping = endTime - startTime
      await conn.sendMessage(from, { text: `‚è∞ ùó•ùó≤ùòÄùóΩùóºùóªùòÄùó≤ ùóßùó∂ùó∫ùó≤ : ${ping}ms` }, { quoted: mnu })
  } catch (e) {
      console.log(e)
      reply(`${e}`)
  }
})

//owner
cmd({
    pattern: "owner",
    react: "üë®‚Äçüíª",
    alias: ["dev","createor","developer"],
    desc: "Get bot\'s command list.",
    category: "main",
    use: '.menu',
    filename: __filename
},
async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{

let tex = `
*ü™ÑHello* ${pushname},

*üßö‚Äç‚ôÄÔ∏èùêà'ùê¶ ¬© ùöÄùöÑùô¥ùô¥ùôΩ ùô∞ùôΩùôπùöÑ ùóë·¥æ·¥ø·¥º üíö -ùêåùêÉ ùêñùê°ùêöùê≠ùê¨ùêÄùê©ùê© ùêÅùê®ùê≠üíó*

> üë®‚Äçüíª *MY ùó¢ùó™ùó°ùóòùó• ùóúùó°ùóôùó¢* ‚öñÔ∏è

*‚ö°Œ∑Œ±–º—î -: KING RASHMIKA*
*‚ö°Œ±g—î -: 18*
*‚ö°Œ∑œÖ–º–≤—î—è* -: +94717775628
*‚ö°—ÉœÉœÖ—ÇœÖ–≤—î* -: https://www.youtube.com/@gamingrash2006

> ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è -: *‚ö°¬©GAMING RASH 2024üíó*

`


// send a contact!
const vcard = 'BEGIN:VCARD\n' // metadata of the contact card
            + 'VERSION:3.0\n' 
            + 'FN:MR RASHMIKA\n' // full name
            + 'ORG:JANITH RASHMIKA;\n' // the organization of the contact
            + 'TEL;type=CELL;type=VOICE;waid=94717775628:+94 71777 5628\n' // WhatsApp ID + phone number
            + 'END:VCARD'
await conn.sendMessage(
    from,
    { 
        contacts: { 
            displayName: 'Janith Rashmika', 
            contacts: [{ vcard }] 
        }
    }
);

await conn.sendMessage(from, { 
  image: {url: 'https://raw.githubusercontent.com/RASH-DATA/ANJU-DATA/refs/heads/main/LOGOS/thisjpg.jpg'},
  caption: tex ,
  contextInfo: {
    mentionedJid: [ '' ],
    groupMentions: [],
    forwardingScore: 999,
    isForwarded: true,
    forwardedNewsletterMessageInfo: {
      newsletterJid: '120363299978149557@newsletter',
      newsletterName: "¬© ùöÄùöÑùô¥ùô¥ùôΩ ùô∞ùôΩùôπùöÑ ùóë·¥æ·¥ø·¥º üíö",
      serverMessageId: 999
    },
externalAdReply: { 
title: '¬© ùöÄùöÑùô¥ùô¥ùôΩ ùô∞ùôΩùôπùöÑ ùóë·¥æ·¥ø·¥º üíö',
body: ' ¬©ùêåùêë ùêëùêÄùêíùêáùêåùêàùêäùêÄ ùêéùêÖùêÇ üíö',
mediaType: 1,
sourceUrl: "https://github.com/Mrrashmika" ,
thumbnailUrl: 'https://raw.githubusercontent.com/RASH-DATA/ANJU-DATA/refs/heads/main/LOGOS/thisjpg.jpg' ,
renderLargerThumbnail: false,
showAdAttribution: true
}
}}, { quoted: mek});
}catch(e){
console.log(e)
reply(`${e}`)
}
})

//
